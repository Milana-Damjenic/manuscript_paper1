{
  "hash": "7e5d8f17b0c0ca9dad22844f5912c06f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Comparing Psychometric and Subjective Adequacy Assessment of Response Scales with Differing Lengths in PHQ-9 and CESD-10\nauthors:\n  - name: Norah Jones\n    affiliation: The University\n    roles: writing\n    corresponding: true\nbibliography: references.bib\nformat: \n  html: \n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\n\n## Section\n\n## Results\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code .hidden}\n# Load libraries\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(reshape2)\nlibrary(psych)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'psych'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(ggiraph)\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'plotly'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'tidyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:reshape2':\n\n    smiths\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:kableExtra':\n\n    group_rows\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:gridExtra':\n\n    combine\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(patchwork)\nlibrary(tools)\n\n# Load data\nload(\"full_data.RData\")\nload(\"scales_items_names_labels.RData\")\n\n# Extract necessary variables from scales_item_names\nphq_item_names <- scales_items_names_labels$phq_item_names\nphq_item_labels <- scales_items_names_labels$phq_item_labels\ncl_phq_item_names <- scales_items_names_labels$cl_phq_item_names\n\n\n# Define color palette\npalette <- c(\"#5a9097\", \"#D76CB8\", \"#AD4FE3\", \"#7DE5AB\", \"#D6D8B0\", \"#D8855E\", \"#898EDA\", \"#D2B9CF\", \"#BEE15A\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#### Prepare PHQ-9 scores and Adequacy and Effort data ####\ndata <- list()\n\nfor (i in 1:length(full_data)) {\n    data[[i]] <- full_data[[i]][,c(phq_item_names, cl_phq_item_names)]\n}\n\n# Check missing in data list per element and per column\nmissing <- lapply(data, function(x) colSums(is.na(x)))\n\n# Where missing, replace with mode for the column\n# Define the get_mode function\nget_mode <- function(v) {\n    v <- v[!is.na(v)]  # Remove NA values\n    uniqv <- unique(v)\n    uniqv[which.max(tabulate(match(v, uniqv)))]\n}\n\n# Updated loop\nfor (i in 1:length(data)) {\n    for (j in 1:ncol(data[[i]])) {\n        if (missing[[i]][j] > 0) {\n            mode_value <- get_mode(data[[i]][,j])\n            data[[i]][,j] <- ifelse(is.na(data[[i]][,j]), mode_value, data[[i]][,j])\n        }\n    }\n}\n\n# Calculate sum scores of PHQ-9 and EFFORT\nfor (i in 1:length(data)) {\n    data[[i]]$phq_score <- rowSums(data[[i]][,phq_item_names])\n    data[[i]]$cl_phq6_r <- 6-data[[i]]$cl_phq6\n    data[[i]]$cl_phq9_r <- 6-data[[i]]$cl_phq9\n    data[[i]]$cl_phq_sp_adequacy <- rowMeans(data[[i]][,c(\"cl_phq3\", \"cl_phq6_r\", \"cl_phq9_r\")])\n    data[[i]]$cl_phq_cogn_effort <- rowMeans(data[[i]][,c(\"cl_phq1\", \"cl_phq4\", \"cl_phq7\")])\n    data[[i]]$cl_phq_emo_effort <- rowMeans(data[[i]][,c(\"cl_phq2\", \"cl_phq5\", \"cl_phq8\")])\n}\n\ndescriptives <- list()\nfor(i in 1:length(data)){\n    temp <- data[[i]][,c(\"cl_phq_sp_adequacy\", \"cl_phq_cogn_effort\", \"cl_phq_emo_effort\")]\n    results <- describe(temp)\n    results <- results[, c(-1, -6, -8, -9, -10, -13)]\n    colnames(results) <- c(\"n\", \"M\", \"SD\", \"Mdn\", \"MAD\", \"Sk\", \"Ku\")\n    descriptives[[i]] <- results\n}\n\nadequacy_effort_means <- data.frame(Scale = 1:20, \n                                    Adequacy = sapply(descriptives, function(x) x[1, \"M\"]),\n                                    Cognitive_Effort = sapply(descriptives, function(x) x[2, \"M\"]),\n                                    Emotional_Effort = sapply(descriptives, function(x) x[3, \"M\"]))\n\n#### Prepare PHQ-9 Item Total Correlations ####\n\n# Calculate item-total correlations using lapply\nIT_cor_col_names <- paste0(phq_item_names, \"_IT_cor\")\nIT_cor_list <- lapply(seq_along(full_data), function(j) { \n    current_data <- full_data[[j]] \n    total_scores <- rowSums(current_data[, phq_item_names], na.rm = TRUE) \n    item_total_corr <- sapply(phq_item_names, function(item) { \n        cor(current_data[[item]], total_scores - current_data[[item]], use = \"pairwise.complete.obs\") \n    }) \n    data.frame(Item = IT_cor_col_names, Correlation = item_total_corr, Dataset = j) \n}) \n\n# Combine the list of data frames into a single data frame\nIT_cor_df <- do.call(rbind, \n                     lapply(seq_along(IT_cor_list), function(i) {\n                         # Add the index 'i' as a new column 'ID' to each data frame in the list\n                         df <- IT_cor_list[[i]]\n                         df$Scale <- i  # Assign the index as an identifier\n                         return(df)\n                     })\n)\n\n#convert to wide based on item\nIT_cor_df_wide <- dcast(IT_cor_df, Scale ~ Item, value.var = \"Correlation\")\n\n# merge data_means and IT_cor_df_wide by scale\nIT_cor_effort_merged <- merge(adequacy_effort_means, IT_cor_df_wide, by = \"Scale\")\n\n# Create transformed variables dataset on a range from 0 to 1 \nscale_to_0_1 <- function(x, new_min = 0, new_max = 1) {\n    (x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)) * (new_max - new_min) + new_min\n}\n\nIT_cor_scaled <- IT_cor_effort_merged %>%\n    mutate(across(-all_of(\"Scale\"), scale_to_0_1))\n\nIT_cor_effort_cor <- list()\neffort_vars <- c(\"Adequacy\", \"Cognitive_Effort\", \"Emotional_Effort\")\nfor(var in effort_vars){\n    df_to_store <- data.frame(Item = c(rep(NA, length(phq_item_names))), \n                              Correlation = c(rep(NA, length(phq_item_names))), \n                              Correlation_Lower = c(rep(NA, length(phq_item_names))), \n                              Correlation_Upper = c(rep(NA, length(phq_item_names))))\n    \n    for(item in IT_cor_col_names){\n        data_temp <- IT_cor_scaled[,c(\"Scale\", item, var)]\n        data_temp <- data_temp[-1,]\n        cor_temp <- cor.test(data_temp[,c(var)], data_temp[,c(item)], method = \"pearson\")\n        cor_temp_est <- cor_temp$estimate\n        cor_temp_lower <- cor_temp$conf.int[1]\n        cor_temp_upper <- cor_temp$conf.int[2]\n        item_pos <- which(IT_cor_col_names == item)\n        df_to_store$Item[item_pos] <- item\n        df_to_store$Correlation[item_pos] <- cor_temp_est\n        df_to_store$Correlation_Lower[item_pos] <- cor_temp_lower\n        df_to_store$Correlation_Upper[item_pos] <- cor_temp_upper\n    }\n    IT_cor_effort_cor[[var]] <- df_to_store\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nIT_adequacy_effort_list <- list()\nIT_adequacy_effort_trends <- list()\neffort_vars <- c(\"Adequacy\", \"Cognitive_Effort\", \"Emotional_Effort\")\nfor(var in effort_vars){\n    plot_list <- list()\n    plot_list_trend <- list()\n    for(item in IT_cor_col_names){\n        \n        data_temp <- IT_cor_scaled[,c(\"Scale\", item, var)]\n        data_temp <- data_temp[-1,]\n        data_temp$Difference <- data_temp[[var]] - data_temp[[item]]\n        #convert to long\n        data_temp_long <- melt(data_temp, id.vars = c(\"Scale\"), \n                               variable.name = \"Variable\", value.name = \"Value\")\n        \n        x_min <- min(data_temp_long$Scale)\n        x_max <- max(data_temp_long$Scale)\n        \n       plot_scale_trends <- ggplot(data = data_temp_long, aes(x = Scale, y = Value, color = Variable, group = Variable)) +\n            geom_point(size = 1) +\n            geom_line(linewidth = 1) + \n            scale_x_continuous(breaks = seq(x_min, x_max, 1)) +\n            labs(x = \"Scale\", y = paste(var, \"Effort Value\", sep = \" \"), title = toTitleCase(phq_item_names[which(IT_cor_col_names == item)])) +\n            theme(legend.position = \"bottom\")\n        \n        # Create the label text\n        label_text <- paste0(\n            \"Correlation: \", round(cor_temp_est, 2),\n            \"\\nCI: [\", round(cor_temp_lower, 2), \", \", round(cor_temp_upper, 2), \"]\")\n        data_cor_temp <- data_temp\n        colnames(data_cor_temp) <- c(\"Scale\", \"IT_cor\", \"Effort\", \"Difference\")\n        \n        plot_cor <- ggplot(data = data_cor_temp, aes(x = Effort, y = IT_cor, color = Scale)) +\n            geom_point() +\n            labs(x = paste(var, \"Effort Value\", sep = \" \"), y = \"Item Total Correlation\",\n                 title = toTitleCase(item)) +\n            #remove legend\n            theme(legend.position = ifelse(item == \"phq1\", \"right\", \"none\")) +\n            annotate(\n                \"text\",\n                x = 0,\n                y = 0,\n                label = label_text,\n                hjust = 0,\n                size = 4,\n                color = \"black\"\n            )\n        plot_list[[item]] <- plot_cor\n        plot_list_trend[[item]] <- plot_scale_trends\n    }\n    IT_adequacy_effort_list[[var]] <- plot_list\n    IT_adequacy_effort_trends[[var]] <- plot_list_trend\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngrid.arrange(\n    grobs = IT_adequacy_effort_list[[\"Adequacy\"]],\n    ncol = 3\n)\n```\n\n::: {.cell-output-display}\n![Plots of the correlation between item-total correlation and scale points adequacy](index_files/figure-html/IT_cor_adequacy_cor_plot-1.png){width=1536}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngrid.arrange(\n    grobs = IT_adequacy_effort_trends[[\"Adequacy\"]],\n    ncol = 3\n)\n```\n\n::: {.cell-output-display}\n![Trends of item-total correlation and scale points adequacy per scale points](index_files/figure-html/IT_cor_adequacy_trend_plot-1.png){width=1536}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Calculate POMP scores using lapply \nitem_pomp_scores_list <- lapply(seq_along(full_data), function(j) { \n    current_data <- full_data[[j]] \n     # Set the score range dynamically\n    if (j == 1) {\n        min_score <- 0\n        max_score <- 3\n    } else {\n        min_score <- 0\n        max_score <- j - 1\n    }\n\n    # Calculate POMP scores \n    pomp_scores <- sapply(phq_item_names, function(item) { \n        mean_score <- mean(current_data[[item]], na.rm = TRUE) \n        (mean_score - min_score) / (max_score - min_score) * 100 \n    }) \n\n    data.frame(Item = phq_item_names, Score = pomp_scores, Dataset = j) \n}) \n\nadequacy_pomp_scores_df_temp <- do.call(rbind, item_pomp_scores_list)\n\n# Combine all POMP scores into one dataframe \nadequacy_pomp_scores_df <- data.frame(Scale = 1:20)  # Initialize an empty data frame\n\nfor(i in phq_item_names) {\n    temp_df <- as.data.frame(adequacy_pomp_scores_df_temp[adequacy_pomp_scores_df_temp$Item == i, c(\"Score\")])\n    colnames(temp_df) <- paste(\"POMP\", i, sep = \"_\")\n    adequacy_pomp_scores_df <- cbind(adequacy_pomp_scores_df, temp_df)\n}\n\nadequacy_pomp_scores_df <- cbind(adequacy_pomp_scores_df, adequacy_effort_means[effort_vars])\n\n#rescale POMP columns in adequacy_pomp_scores_df\nPOMP_scaled <- adequacy_pomp_scores_df %>%\n    mutate(across(-all_of(\"Scale\"), scale_to_0_1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nPOMP_adequacy_effort_list <- list()\nPOMP_adequacy_effort_trends <- list()\nPOMP_col_names <- paste(\"POMP\", phq_item_names, sep = \"_\")\neffort_vars <- c(\"Adequacy\", \"Cognitive_Effort\", \"Emotional_Effort\")\nfor(var in effort_vars){\n    plot_list <- list()\n    plot_list_trend <- list()\n    for(item in POMP_col_names){\n        data_temp <- POMP_scaled[,c(\"Scale\", item, var)]\n        data_temp <- data_temp[-1,]\n        data_temp$Difference <- data_temp[[var]] - data_temp[[item]]\n        #convert to long\n        data_temp_long <- melt(data_temp, id.vars = c(\"Scale\"), \n                               variable.name = \"Variable\", value.name = \"Value\")\n        \n        plot_scale_trends <- ggplot(data = data_temp_long, aes(x = Scale, y = Value, color = Variable, group = Variable)) +\n            geom_point(size = 1) +\n            geom_line(linewidth = 1) + \n            scale_x_continuous(breaks = seq(2, 20, 1)) +\n            labs(x = \"Scale\", y = paste(var, \"Effort Value\", sep = \" \"), title = toTitleCase(phq_item_names[which(POMP_col_names == item)])) +\n            scale_color_manual(values = c(\"blue\", \"green\", \"red\")) +  # Define the colors manually\n            theme(legend.position = \"bottom\")\n        \n        # Create the label text\n        label_text <- paste0(\n            \"Correlation: \", round(cor_temp_est, 2),\n            \"\\nCI: [\", round(cor_temp_lower, 2), \", \", round(cor_temp_upper, 2), \"]\")\n        data_cor_temp <- data_temp\n        colnames(data_cor_temp) <- c(\"Scale\", \"POMP\", \"Effort\", \"Difference\")\n        \n        plot_cor <- ggplot(data = data_cor_temp, aes(x = Effort, y = POMP, color = Scale)) +\n            geom_point() +\n            labs(x = paste(var, \"Effort Value\", sep = \" \"), y = \"Item Total Correlation\",\n                 title = toTitleCase(phq_item_names[which(POMP_col_names == item)])) +\n            #remove legend\n            theme(legend.position = ifelse(item == \"phq1\", \"right\", \"none\")) +\n            annotate(\n                \"text\",\n                x = 0,\n                y = 0,\n                label = label_text,\n                hjust = 0,\n                size = 4,\n                color = \"black\"\n            )\n        plot_list[[item]] <- plot_cor\n        plot_list_trend[[item]] <- plot_scale_trends\n    }\n    POMP_adequacy_effort_list[[var]] <- plot_list\n    POMP_adequacy_effort_trends[[var]] <- plot_list_trend\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngrid.arrange(\n    grobs = POMP_adequacy_effort_list[[\"Adequacy\"]],\n    ncol = 3\n)\n```\n\n::: {.cell-output-display}\n![Plots of the correlation between item-total correlation and scale points adequacy](index_files/figure-html/POMP_adequacy_cor_plot-1.png){width=1536}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngrid.arrange(\n    grobs = POMP_adequacy_effort_trends[[\"Adequacy\"]],\n    ncol = 3\n)\n```\n\n::: {.cell-output-display}\n![Trends of item-total correlation and scale points adequacy per scale points](index_files/figure-html/POMP_adequacy_trend_plot-1.png){width=1536}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}